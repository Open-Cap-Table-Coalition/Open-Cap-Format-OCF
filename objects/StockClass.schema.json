{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "Objects.StockClass.schema.json",
  "title": "Object - StockClass",
  "description": "Object describing a type of stock class issued by the issuer",
  "type": "object",
  "properties": {
    "id": {
      "description": "Identifier for the object",
      "type": "string"
    },
    "comments": {
      "description": "Unstructured text comments",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "name": {
      "description": "Name for the stock type (e.g. Series A Preferred or Class A Common)",
      "type": "string"
    },
    "class_type": {
      "description": "The type of this StockClass (e.g. Preferred or Common)",
      "$ref": "Enums.StockClass.schema.json"
    },
    "default_id_prefix": {
      "description": "Default prefix for certificate numbers in certificated shares (e.g. CS- in CS-1). If certificate IDs have a dash, the prefix should end in the dash like CS-",
      "type": "string"
    },
    "current_shares_authorized": {
      "description": "The most current number of shares authorized for this StockClass",
      "$ref": "Types.Numeric.schema.json"
    },
    "board_approval_date": {
      "description": "Date which board approved the class",
      "$ref": "Types.DateTime.schema.json"
    },
    "votes_per_share": {
      "description": "The number of votes each share of this StockClass gets",
      "$ref": "Types.Numeric.schema.json"
    },
    "par_value": {
      "description": "Per-share par value of this StockClass",
      "$ref": "Types.Money.schema.json"
    },
    "price_per_share": {
      "description": "Per-share price this StockClass was issued for",
      "$ref": "Types.Money.schema.json"
    },
    "seniority": {
      "description": "Seniority is ordered by increasing number so that Stock classes with a higher Seniority have higher repayment priority. The following properties hold for all stock classes for a given company: \na) transitivity: stock classes are absolutely stackable by seniority and in increasing numerical order, \nb) non-uniqueness: multiple stock classes can have the same Seniority number and therefore have the same liquidation/repayment order.\nIn practice, stock classes with same seniority may be created at different points in time and (for example, an extension of an existing preferred financing round), and also a new stock class can be created with seniority between two existing stock classes, in which case it is assigned some decimal number between the numbers representing Seniority of the respective classes.",
      "$ref": "Types.Numeric.schema.json"
    },
    "conversion_rights": {
      "title": "StockClass - StockClassConversionRights Array",
      "description": "List of StockClassConversionRights possible for this StockClass",
      "type": "array",
      "items": {
        "$ref": "Types.StockClassConversionRights.schema.json"
      }
    },
    "liquidation_preference_multiple": {
      "description": "The liquidation preference per share for this StockClass",
      "$ref": "Types.Numeric.schema.json"
    },
    "participation_cap_multiple": {
      "description": "The participation cap multiple per share for this StockClass",
      "$ref": "Types.Numeric.schema.json"
    }
  },
  "required": [
    "id",
    "name",
    "class_type",
    "default_id_prefix",
    "current_shares_authorized",
    "board_approval_date",
    "votes_per_share",
    "par_value",
    "price_per_share",
    "seniority"
  ]
}